/*
 * tkFurie.h
 *
 *  Created on: 10 груд. 2018 р.
 *      Author: KozakVF
 */


#ifndef TKLIBRARIES_TKFURIE_H_
#define TKLIBRARIES_TKFURIE_H_
#include "tkConfig.h"
#ifdef FURIE_LIB




#include <stdbool.h>

/* Оголошення структури для результатів обчислення rms через суму квадратів елементарних струмів*/
typedef struct {
	adcf_t 	permanent_component; /* постійна складова струму, якщо на вході - відліки АЦП(uint16),
							      	  	  це величина, залежна від налаштувань схеми, відліки АЦП		*/
	adcf_t 	rms_heat;            /* root_mean-square, діючий струм тепловий, відліки АЦП			*/
} iheat_out_t;
/* Оголошення структури для результатів обчислення rms через перетворення Фур'є для основної гармоніки */
typedef struct {
	adcf_t 	rms_fundamental;     /* root_mean-square, діючий струм основної гармоніки, відліки АЦП 	*/
	gradf_t phase_fundamental;   /* фаза основної гармоніки,  градуси*/
	adcf_t	rmsZero;			 /* діючий струм суми гармонік, кратних трьом				*/
	adcf_t  rmsNegative;         /* діючий струм гармонік, кратних 3*к+2                    */
} ifurie_out_t;


typedef struct {
	adcf_t  u1harm_ampl;	/*амплітуда першої гармоніки напруги, попугаї 	*/
	gradf_t u_phase;		/*фаза напруги, градуси 				*/
} ufurie_out_t;

/* Обчислення на один-два порядки сорочуються, якщо не рахувати синуси/косинуси кожер раз
 * При ініціалізації в масив записується таблиця синусів 								*/
void f_uiFurie_Init(void);

/* Перетворення Фурьє для напруги,
 * постійна складова - ігнорується, обчислюється:
 * амплітуда напруги ( у одиницях АЦП для подальшого масштабування
 * фаза - у градусах, для читабельності
 * На вході -
 * показчик на масив відліків АЦП 18 відліків,
 * поточна частота мережі енергопостачання, 40..60Гц
 * дискрет між відліками обчислюється через частоту,
 * */
int	f_ufurie(
		volatile adcf_t *pf_array,		/* показчик на масив відліків АЦП 0..4096, перетворений у формат float 		*/
		volatile ufurie_out_t *p_ufr	/*u_rms   -амплітуда напруги ( у одиницях АЦП для подальшого масштабування	*/
		);



/* Функція реалізує дискретне перетворення Фурьє
 * для обчислення величин у мережі змінного струму відомої частоти 46..54Гц
 * кількість відліків - завжди 18 */
int f_ifurie(	volatile adcf_t *pf_array,     // показчик на масив відліків АЦП, кількість відліків = 18
				volatile ifurie_out_t *p_ifr); // результат

/* Функція обчислення rms через суму квадратів елементарних струмів*/
int f_iheat(
		volatile adcu16_t *p200_array, /* показчик на масив відліків, до 240 */
		float zero_line,			   /* вхідна змінна, нуль АЦП обчислена і згладжена раніше */
		uint16_t Nn,				   /* актуальна кількість відліків, обчисленна через поточну частоту */
		volatile iheat_out_t  *p_ih);  /* результат											*/











#endif //FURIE_LIB
#endif /* TKLIBRARIES_TKFURIE_H_ */
